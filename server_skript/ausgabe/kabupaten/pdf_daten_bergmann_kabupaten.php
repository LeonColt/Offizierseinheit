<?php

/**
 * Created by PhpStorm.
 * User: LC
 * Date: 17/12/2015
 * Time: 19:26
 */
require_once standart_system_pfad.'server_skript/ausgabe/kabupaten/Base_ausgabe_kabupaten.php';
class pdf_daten_bergmann_kabupaten extends Base_ausgabe_kabupaten
{
    private $daten;
    protected function zeichnen_daten()
    {
        // TODO: Implement zeichnen_daten() method.
        $this->daten = array();
        $daten_zeichnen = $this->zuordnung_daten();
        $daten_insgesamt_von_kabupaten = $this->berechne_insgesamt_von_kabupaten($daten_zeichnen);
        $daten_insgesamt = $this->berechne_insgesamt($daten_insgesamt_von_kabupaten);
        $daten_insgesamt_von_bentuk = $this->berechne_insgesamt_von_bentuk($daten_zeichnen);
        $zeiger = 1;
        for($i = 0; $i<count($this->kabupaten); $i++)
        {
            $temp = array();
            array_push($temp, ($zeiger++));
            array_push($temp, $this->kabupaten[$i][2]);
            for($j = 0; $j<$this->insgesamt_spalte; $j++)
            {
                array_push($temp, $this->erhalten_wert($daten_insgesamt_von_kabupaten[$this->kabupaten[$i][1]][$j]));
            }
            array_push($this->daten, $temp);
            for($j = 0; $j<count($this->bentuk); $j++)
            {
                $temp = array();
                array_push($temp, ' ');
                array_push($temp, $this->bentuk[$j][1]);
                for($k = 0; $k<$this->insgesamt_spalte; $k++)
                {
                    array_push($temp, $this->erhalten_wert($daten_zeichnen[$this->kabupaten[$i][1]][$this->bentuk[$j][0]][$k]));
                }
                array_push($this->daten, $temp);
            }
        }
        $temp = array();
        array_push($temp, $zeiger);
        array_push($temp, 'Jumlah Total');
        for($k = 0; $k<$this->insgesamt_spalte; $k++)
        {
            array_push($temp, $this->erhalten_wert($daten_insgesamt[$k]));
        }
        array_push($this->daten, $temp);
        for($i = 0; $i<count($this->bentuk); $i++)
        {
            $temp = array();
            array_push($temp, ' ');
            array_push($temp, $this->bentuk[$i][1]);
            for($k = 0; $k<$this->insgesamt_spalte; $k++)
            {
                array_push($temp, $this->erhalten_wert($daten_insgesamt_von_bentuk[$this->bentuk[$i][0]][$k]));
            }
            array_push($this->daten, $temp);
        }
    }

    public function ausfuhren()
    {
        // TODO: Implement ausfuhren() method.
        $this->vorbereiten_daten();
        $this->zeichnen_daten();
        return $this->daten;
    }
    public function ausgabe_erhalten_monat_fur_title($index)
    {
        return parent::ausgabe_erhalten_monat_fur_title($index); // TODO: Change the autogenerated stub
    }
}