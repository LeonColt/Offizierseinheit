<?php

/**
 * Created by PhpStorm.
 * User: LC
 * Date: 10/01/2016
 * Time: 17:47
 */
require_once standart_system_pfad.'server_skript/base/Bergmann.php';
class wahle_max_seite_benutzer extends Bergmann
{
    public function erhalten_daten()
    {
        // TODO: Implement erhalten_daten() method.
        return ceil(((int)$this->ergebnis[0][0])/anzaigen_enstellung_benutzer_seite_max_zeile);
    }

    protected function daten_leere()
    {
        // TODO: Implement daten_leere() method.
    }

    protected function daten_uberprufen()
    {
        // TODO: Implement daten_uberprufen() method.
        return true;
    }

    protected function vorbereiten_abfrage_und_parameter()
    {
        // TODO: Implement vorbereiten_abfrage_und_parameter() method.
        if(strcasecmp(filter_input(INPUT_GET, parameter_anzaigen_einstellung_benutzer_optionen_filter), anzaigen_einstellung_benutzer_optionen_alle) === 0)
            $this->abfrage = 'SELECT COUNT(id) FROM sg_user;';
        else
        {
            $filter = filter_input(INPUT_GET, parameter_anzaigen_einstellung_benutzer_optionen_filter, FILTER_VALIDATE_INT);
            if($filter === false || $filter === null) $filter = -1;
            if($filter === 1) $this->abfrage = 'SELECT COUNT(id) FROM sg_user WHERE id_jenis = 1;';
            else if($filter === 2) $this->abfrage = 'SELECT COUNT(id) FROM sg_user WHERE id_jenis = 2;';
            else if($filter === 3)
            {
                if(strcasecmp(filter_input(INPUT_GET, parameter_anzaigen_einstellung_benutzer_optionen_provinz), anzaigen_einstellung_benutzer_optionen_alle) === 0)
                    $this->abfrage = 'SELECT COUNT(id) FROM sg_user WHERE id_jenis = 3;';
                else
                {
                    $filter = filter_input(INPUT_GET, parameter_anzaigen_einstellung_benutzer_optionen_provinz, FILTER_VALIDATE_INT);
                    if($filter === false || $filter === null) $filter = -1;
                    if($filter !== -1)
                    {
                        $this->abfrage = 'SELECT COUNT(sg_user.id) FROM sg_user JOIN user_tingkat_provinsi ON sg_user.id = user_tingkat_provinsi.id AND user_tingkat_provinsi.id_provinsi = ? WHERE id_jenis = 3;';
                        $this->parameter = array($filter);
                    }
                    else $this->abfrage = 'SELECT 0';
                }
            }
            else if($filter === 4)
            {
                if(strcasecmp(filter_input(INPUT_GET, parameter_anzaigen_einstellung_benutzer_optionen_kabupaten), anzaigen_einstellung_benutzer_optionen_alle) === 0)
                    $this->abfrage = 'SELECT COUNT(id) FROM sg_user WHERE id_jenis = 4;';
                else
                {
                    $filter = filter_input(INPUT_GET, parameter_anzaigen_einstellung_benutzer_optionen_kabupaten, FILTER_VALIDATE_INT);
                    if($filter === false || $filter === null) $filter = -1;
                    if($filter !== -1)
                    {
                        $this->abfrage = 'SELECT COUNT(sg_user.id) FROM sg_user JOIN user_tingkat_kabupaten_kota ON sg_user.id = user_tingkat_kabupaten_kota.id AND user_tingkat_kabupaten_kota.id_kabupaten_kota = ? WHERE id_jenis = 4;';
                        $this->parameter = array($filter);
                    }
                    else $this->benutzer = array();
                }
            }
            else $this->abfrage = 'SELECT 0';
        }
    }
    public function ist_token_korrigieren()
    {
        return true;
        //return parent::ist_token_korrigieren(); // TODO: Change the autogenerated stub
    }
}